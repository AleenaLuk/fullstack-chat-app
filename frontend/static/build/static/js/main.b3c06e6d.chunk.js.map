{"version":3,"sources":["components/Navbar/Navbar.js","components/Registration/Registration.js","components/Login/Login.js","components/ChatDetail/ChatDetail.js","components/ChatForm/ChatForm.js","components/ChatList/ChatList.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","handleNavigation","isAuth","handleLogout","Registration","state","username","email","password1","password2","handleInput","bind","handleSubmit","event","this","setState","target","name","value","preventDefault","handleRegistration","onSubmit","htmlFor","onChange","aria-describedby","Component","Login","password","handleLogin","ChatDetail","testing","isEditing","text","saveMessage","handleChange","editMessage","message","user","removeMessage","ChatForm","handleNewChat","fetchUser","a","handleError","err","console","warn","fetch","catch","response","ok","json","data","test","pk","Fragment","rows","cols","ChatList","messages","edit","isediting","fetchMessages","addMessage","messageInterval","setInterval","clearInterval","chat","options","method","headers","Cookies","get","then","index","findIndex","splice","error","map","App","selection","body","JSON","stringify","set","key","log","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3c06e6d.chunk.js","sourcesContent":["function Navbar(props) {\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-5\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">CHAT APP</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <button className=\"btn\" onClick={() => props.handleNavigation('chats')}>Home</button>\n            </li>\n            {props.isAuth\n              ?\n                <li className=\"nav-item\">\n                  <button className=\"btn\" onClick={() => props.handleLogout()}>Logout</button>\n                </li>\n              :\n                <>\n                  <li className=\"nav-item\">\n                    <button className=\"btn\" onClick={() => props.handleNavigation('login')}>Login</button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button className=\"btn\" onClick={() => props.handleNavigation('register')}>Registration</button>\n                  </li>\n                </>\n            }\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;\n","import { Component } from 'react';\n\nclass Registration extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleRegistration(this.state);\n  }\n\n  render() {\n    return (\n      <form className=\"col-8\" onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" name=\"email\" onChange={this.handleInput} />\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password1\" className=\"form-label\">Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password1\" name=\"password1\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password2\" className=\"form-label\">Confirm Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password2\" name=\"password2\" onChange={this.handleInput} />\n        </div>\n        <div className=\"d-flex\">\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          <button type=\"button\" className=\"btn btn-link ms-auto\" onClick={() => this.props.handleNavigation('login')}>Already have an account? Login</button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Registration;\n","import { Component } from 'react';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleLogin(this.state);\n  }\n\n  render() {\n    return (\n      <form className=\"col-8\" onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" name=\"email\" onChange={this.handleInput} />\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" onChange={this.handleInput} />\n        </div>\n        <div className=\"d-flex\">\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          <button type=\"button\" className=\"btn btn-link ms-auto\" onClick={() => this.props.handleNavigation('register')}>Need an account? Register</button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Login;\n","import {Component} from 'react';\n\nclass ChatDetail extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      testing: '',\n      isEditing: false,\n      text: '',\n    }\n\n    this.saveMessage = this.saveMessage.bind(this);\n    this.handleChange = this.handleChange.bind(this); \n  }\n\n  handleSubmit(event) {\n     event.preventDefault();\n   }\n\n   handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value })\n\n}\n  saveMessage() {\n\n    this.props.editMessage();\n    this.setState({isEditing: false});\n\n  }\n  render() {\n    return(\n      <li>\n\n\n        {\n          this.state.isEditing\n          ? <input type=\"text\" name=\"text\" value={this.state.text} onChange={this.handleChange}/>\n          : <p>{this.props.message.text}</p>\n        }\n\n        <p>{this.props.message.user}</p>\n        <button className=\"btn btn-danger\"type=\"button\" onClick={()=>this.props.removeMessage(this.props.message.id)}>delete</button>\n        {\n          this.state.isEditing\n          ? <button className=\"btn btn-info\"type=\"button\" onClick={() => this.props.editMessage(this.props.message, this.setState.text)}>Save</button>\n          : <button className=\"btn btn-info\"type=\"button\" onClick={() => this.setState({isEditing: true})}>Edit</button>\n        }\n\n      </li>\n    )\n  }\n}\n\nexport default ChatDetail;\n","import React, { Component } from 'react';\n\nimport './ChatForm.css';\n\nclass ChatForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      user: '',\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleNewChat(this.state);\n    this.fetchUser();\n  }\n\n  async fetchUser() {\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/user/').catch(handleError);\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      this.setState({\n        test: data,\n        user: data.pk\n      });\n    }\n  }\n\n\n  render() {\n    return(\n      <React.Fragment>\n        <form className=\"col-8\" onSubmit={this.handleSubmit}>\n        <h2>Chat</h2>\n         <textarea id=\"w3review\" rows=\"5\" cols=\"60\" name=\"text\" onChange={this.handleInput}>\n          </textarea>\n          <div className=\"d-flex\">\n            <button type=\"submit\" className=\"btn btn-info\">Submit</button>\n          </div>\n        </form>\n     </React.Fragment>\n    )\n  }\n}\nexport default ChatForm;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport ChatDetail from './../ChatDetail/ChatDetail';\nimport ChatForm from './../ChatForm/ChatForm';\n\nclass ChatList extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messages: [],\n      edit: '',\n      isediting: null,\n    }\n\n    this.fetchMessages = this.fetchMessages.bind(this);\n    this.addMessage = this.addMessage.bind(this);\n    this.removeMessage = this.removeMessage.bind(this);\n    this.editMessage = this.editMessage.bind(this);\n    this.saveMessage = this.saveMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const messageInterval = setInterval(this.fetchMessages, 1000);\n    this.setState({ messageInterval });\n  }\n\n  componentWillUnmount() {\n    // https://reactjs.org/docs/state-and-lifecycle.html#adding-lifecycle-methods-to-a-class\n    clearInterval(this.state.messageInterval);\n  }\n\n  async fetchMessages() {\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/api/v1/chats/').catch(handleError);\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      this.setState({messages: data});\n    }\n  }\n\n\n  async addMessage(chat) {\n    this.props.handleNewChat(chat);\n\n  }\n\n  editMessage(message) {\n  // const currentMessage = {\n  //   text: message,\n  //   user: user,\n  // }\n  //        const options = {\n  //          method: 'PUT',\n  //          headers: {\n  //            'Content-Type': 'application/json',\n  //            'X-CSRFToken': Cookies.get('csrftoken'),\n  //          },\n  //          body: JSON.stringify(currentMessage),\n  //        }\n  //        fetch(`/api/v1/chats/${id}/`, options)\n  //          .then(response => response.json())\n            // const messages = [...this.state.messages];\n       }\n\nsaveMessage(message) {\n  // const startEditing = {\n  //   text: '',\n  // }\n  // const options = {\n  //   method: 'POST',\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  //     'X-CSRFToken': Cookies.get('csrftoken'),\n  //   },\n  //   body: JSON.stringify(message),\n  // }\n  // // fetch(`/api/v1/chats/${id}/`, options)\n  // //   .then(response => response.json())\n}\n\n async removeMessage(id) {\n    const options = {\n       method: 'DELETE',\n       headers: {\n         'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n       },\n     }\n\n     fetch(`/api/v1/chats/${id}`, options)\n    .then(response => {\n      const messages = [...this.state.messages];\n      const index = messages.findIndex(message => message.id === id);\n      messages.splice(index, 1);\n      this.setState({ messages });\n    })\n\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  }\n\n\n\n\n  render() {\n    const messages = this.state.messages.map(message => (\n      <ChatDetail key={message.id} message={message} removeMessage={this.removeMessage} editMessage={this.editMessage} />\n    ))\n    return(\n\n      <>\n        <ChatForm handleNewChat={this.addMessage}/>\n        <ul>{messages}</ul>\n      </>\n    )\n  }\n}\n\nexport default ChatList;\n","import { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n\nimport Navbar from './../Navbar/Navbar';\n\nimport Registration from './../Registration/Registration';\nimport Login from './../Login/Login';\n\nimport ChatList from './../ChatList/ChatList';\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chats' : 'login'\n    }\n\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleNewChat = this.handleNewChat.bind(this);\n  }\n\n  handleNavigation(selection) {\n    this.setState({ selection });\n  }\n\n  async handleRegistration(user) {\n    const options = {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n     },\n     body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chats' });\n    }\n  }\n\n  async handleLogin(user) {\n    const options = {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n     },\n     body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n      console.log('response', response)\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chats' });\n    }\n  }\n\n  async handleLogout() {\n    const options = {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n       'X-CSRFToken': Cookies.get('csrftoken'),\n     },\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n    if(response.ok) {\n      Cookies.remove('Authorization');\n      this.setState({ selection: 'login' });\n    }\n  }\n\n  async handleNewChat(chat) {\n    console.log('text', chat)\n    const options = {\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n     },\n     body: JSON.stringify(chat),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/api/v1/chats/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chats' });\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"justify-content-center row\">\n        <Navbar handleNavigation={this.handleNavigation} isAuth={this.state.selection === 'chats'} handleLogout={this.handleLogout}/>\n        {this.state.selection === 'login' && <Login handleNavigation={this.handleNavigation} handleLogin={this.handleLogin}/>}\n        {this.state.selection === 'register' && <Registration handleNavigation={this.handleNavigation} handleRegistration={this.handleRegistration}/>}\n        {this.state.selection === 'chats' && <ChatList handleNewChat={this.handleNewChat} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}